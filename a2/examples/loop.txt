#set the start and end of the range
start := 2  #inclusive
end := 31   #exclusive

invalidate := () => {
    found := 1
}

stepPrime := () => {
    j := plus{j, 1}
    cond{eq{0, modulo{nr, j}}, invalidate{}, 0}

    cond{eq{j, nr}, print{nr}, 0}
    cond{or{found, eq{j, nr}}, 0, stepPrime{}}
}


i := start

step := () => {
    found := 0
    j := 1
    nr := i
    stepPrime{}

    i := plus{i, 1}
    cond{lt{i, end}, step{}, 0}
}

step{}
